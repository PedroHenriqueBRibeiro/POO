# Compilador e flags
CC = gcc
CFLAGS = -Wall -Wextra -std=c99 -g -Iinclude
LDFLAGS = 

# Diret√≥rios
SRC_DIR = src
OBJ_DIR = obj
BIN_DIR = .

# Arquivos fonte
SRCS = $(wildcard $(SRC_DIR)/*.c) \
       $(wildcard $(SRC_DIR)/classes/*.c) \
       $(wildcard $(SRC_DIR)/data/*.c) \
       $(wildcard $(SRC_DIR)/lista/*.c) \
       $(wildcard $(SRC_DIR)/io/*.c) \
       $(wildcard $(SRC_DIR)/relatorios/*.c) \
       $(wildcard $(SRC_DIR)/filtro/*.c)

# Arquivos objeto
OBJS = $(SRCS:$(SRC_DIR)/%.c=$(OBJ_DIR)/%.o)

# Nome do execut√°vel
TARGET = $(BIN_DIR)/trabalho_poo

# Regra principal
all: $(TARGET)

# Link do execut√°vel
$(TARGET): $(OBJS)
	@mkdir -p $(BIN_DIR)
	$(CC) $(OBJS) -o $@ $(LDFLAGS)
	@echo "‚úÖ Execut√°vel criado: $(TARGET)"

# Compila√ß√£o dos objetos
$(OBJ_DIR)/%.o: $(SRC_DIR)/%.c
	@mkdir -p $(dir $@)
	$(CC) $(CFLAGS) -c $< -o $@

# Regra para executar
run: $(TARGET)
	./$(TARGET)

# Limpeza
clean:
	rm -rf $(OBJ_DIR) $(TARGET)
	@echo "üßπ Arquivos de compila√ß√£o removidos"

# Debug
debug: CFLAGS += -DDEBUG -O0
debug: $(TARGET)

# Release
release: CFLAGS += -O2
release: $(TARGET)

# Ajuda
help:
	@echo "Comandos dispon√≠veis:"
	@echo "  make all     - Compila o projeto"
	@echo "  make run     - Compila e executa"
	@echo "  make clean   - Remove arquivos compilados"
	@echo "  make debug   - Compila com flags de debug"
	@echo "  make release - Compila com otimiza√ß√£o"

.PHONY: all run clean debug release help